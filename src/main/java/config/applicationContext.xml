<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:task="http://www.springframework.org/schema/task"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
		default-lazy-init="true"><!-- 默认初始化bean -->

	<context:property-placeholder location="classpath*:config/diange_setting.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
	<context:property-placeholder location="classpath*:config/jdbc.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>
	
	<!-- 自动扫描bean -->
	<context:component-scan base-package="com.bianmaren">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- alibaba druid 连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	     <property name="url" value="${jdbc.url}" />
	     <property name="username"><value>${jdbc.username}</value></property>
	     <property name="password" value="${jdbc.password}" />
	     <property name="filters"><value>stat</value></property>
	     <property name="maxActive"><value>20</value></property>
	     <property name="initialSize"><value>1</value></property>
	     <property name="maxWait"><value>60000</value></property>
	     <property name="minIdle"><value>1</value></property>
	     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
	     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
	     <property name="validationQuery"><value>SELECT 'x'</value></property>
	     <property name="testWhileIdle"><value>true</value></property>
	     <property name="testOnBorrow"><value>false</value></property>
	     <property name="testOnReturn"><value>false</value></property>
	     <property name="poolPreparedStatements"><value>true</value></property>
	     <property name="maxOpenPreparedStatements"><value>20</value></property>
	 </bean>
	<!-- 阿里连接池监控配置-->
	<bean id="druid-stat-interceptor"
		  class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		  scope="prototype">
		<property name="patterns">
			<list>
				<value>com.bianmaren.controller.*</value>
			</list>
		</property>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
					 pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	<!-- JPA -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceXmlLocation" value="classpath*:config/persistence.xml" />
		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop>
			</props>
		</property>
	</bean>
	
	<!-- JPA事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- 启用注解事务配置功能 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 启用缓存注解功能 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<!--  将静态方法返回值直接定义成Bean --> 
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<!-- targetClass确定目标类，确定调用哪个类 --> 
		<property name="targetClass" value="java.lang.System" />
		<!-- targetMethod确定目标方法，确定调用目标class的哪个方法 该方法必须是静态方法-->  
		<property name="targetMethod" value="setProperty" />
		<!-- 参数 -->
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>${system.project_name}</value>
			</list>
		</property>
	</bean>
	
	<!-- cacheManager工厂类，指定ehcache.xml的位置 -->  
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:config/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	
	<!-- 声明cacheManager -->  
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	
	<!-- 整合FreeMarker -->
	<bean id="freeMarkerConfigurer" class="com.bianmaren.freemarker.ShiroTagFreeMarkerConfigurer">
		<!-- 模版路径 -->
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="base" value="#{servletContext.contextPath}" />
				<entry key="locale" value="${locale}" />
				<entry key="message" value-ref="messageMethod" />
				<entry key="execute_time" value-ref="executeTimeDirective" />
				<entry key="flash_message" value-ref="flashMessageDirective" />
				<entry key="friend_link" value-ref="friendLinkListDirective" />
				<entry key="pagination" value-ref="paginationDirective" />
				<entry key="carousel_image" value-ref="carouselImageListDirective" />
				<entry key="abbreviate" value-ref="abbreviateMethod" />
				<entry key="current_admin_role" value-ref="currentAdminRoleMethod" />
				<entry key="navigations" value-ref="navigationDirective" />
				<entry key="article_list" value-ref="articleListDirective" />
				<entry key="article_category_root_list" value-ref="articleCategoryRootListDirective" />
				<entry key="article_category_parent_list" value-ref="articleCategoryParentListDirective" />
				<entry key="article_category_children_list" value-ref="articleCategoryChildrenListDirective" />
				<entry key="famous_aphorism" value-ref="famousAphorismDirective" />
		</map>
	</property>
</bean>

		<!-- ResourceBundleMessageSource定时刷新资源文件 -->
<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
<!-- 刷新资源文件的周期，以秒为单位-->
<property name="cacheSeconds" value="${message.cache_seconds}" />
<!-- 未找到资源文件抛异常 -->
<property name="useCodeAsDefaultMessage" value="true" />
<!-- 参数  资源文件路径 -->
<property name="basenames">
	<list>
		<value>${message.common_path}</value>
		<value>${message.shop_path}</value>
		<value>${message.admin_path}</value>
		<value>${message.weixin_path}</value>
	</list>
</property>
</bean>

		<!-- 国际化 -->
<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
<property name="defaultLocale" value="${locale}" />
</bean>

		<!-- JavaMail -->
<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
<property name="javaMailProperties">
	<props>
		<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
		<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
		<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
		<!--
        <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
        -->
	</props>
		</property>
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760000"/>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>


	<!-- 启动事务调度 -->
	<task:annotation-driven />

</beans>